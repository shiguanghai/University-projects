【第2版方案分析】
1、swim方法提上去，所有的子类都受益。
2、display方法放在父类作为抽象方法，也非常合理，因为一只抽象的鸭子是长相的。只有在子类的具体鸭子中，才是有形象的、具体的。
3、fly方法放到父类中，Mallard和Redhead两个类受益，消除了代码冗余；但是Rubber和Wooden这两个增加了负担，它们必须要提供一个空方法，来覆盖（override）从父类中继承下来的fly方法。
4、quack方法放到父类中，Mallard和Redhead两个类受益，消除了代码冗余；但是给Wooden增加了负担，它们必须要提供一个空方法，来覆盖（override）从父类中继承下来的quack方法。
【提问】请问如何改进设计，消除Rubber和Wooden的不必要的负担――定义自己不需要的方法，提供空实现？